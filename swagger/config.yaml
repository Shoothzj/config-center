swagger: "2.0"
info:
  description: "Config API"
  version: "1.0.0"
  title: "Swagger Config"
  contact:
    email: "shoothzj@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/v1"
schemes:
  - "https"
  - "http"
parameters:
  env:
    in: "path"
    name: "env"
    required: true
    type: string
    pattern: "[a-fA-F]{1,31}"
  cluster:
    in: "path"
    name: "cluster"
    required: true
    type: string
    pattern: "[a-fA-F]{1,31}"
  config_name:
    in: "path"
    name: "config_name"
    required: true
    type: string
    pattern: "[a-fA-F]{1,31}"
paths:
  /envs/{env}/clusters/{cluster}/configs:
    post:
      tags:
        - "config"
      summary: "create a config"
      description: ""
      operationId: "createConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/env"
        - $ref: "#/parameters/cluster"
        - in: "body"
          name: "body"
          description: "Config Body"
          required: true
          schema:
            $ref: "#/definitions/CreateConfigReq"
      responses:
        "405":
          description: "Invalid input"
  /envs/{env}/clusters/{cluster}/configs/{config_name}:
    put:
      tags:
        - "config"
      summary: "update config, now only update schema"
      description: ""
      operationId: "updateConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/env"
        - $ref: "#/parameters/cluster"
        - $ref: '#/parameters/config_name'
        - in: "body"
          name: "body"
          description: "Update Config Body"
          required: true
          schema:
            $ref: "#/definitions/UpdateConfigReq"
      responses:
        "405":
          description: "Invalid input"
    get:
      tags:
        - "config"
      summary: "get config"
      description: ""
      operationId: "getConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/env"
        - $ref: "#/parameters/cluster"
        - $ref: '#/parameters/config_name'
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/GetConfigResp"
        "405":
          description: "Invalid input"
    delete:
      tags:
        - "config"
      summary: "delete config"
      description: ""
      operationId: "delete_config"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - $ref: "#/parameters/env"
        - $ref: "#/parameters/cluster"
        - $ref: '#/parameters/config_name'
      responses:
        "204":
          description: "No Content"
        "405":
          description: "Invalid input"
definitions:
  CreateConfigReq:
    type: "object"
    properties:
      name:
        type: "string"
        description: "config name"
      schema:
        $ref: "#/definitions/ConfigSchema"
  UpdateConfigReq:
    type: "object"
    properties:
      schema:
        $ref: "#/definitions/ConfigSchema"
  GetConfigResp:
    type: "object"
    properties:
      name:
        type: "string"
        description: "config name"
      schema:
        $ref: "#/definitions/ConfigSchema"
  ConfigSchema:
    type: "object"
    properties:
      version:
        type: "integer"
        format: "int8"
      fields:
        type: "array"
        items:
          $ref: "#/definitions/ConfigField"
  ConfigField:
    type: "object"
    description: "Config field"
    properties:
      name:
        type: "string"
      type:
        type: "string"